{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC_User\\\\study\\\\react\\\\tic_tac_toe\\\\src\\\\App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Square({\n  value,\n  onSquareClick\n}) {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"square\",\n    onClick: onSquareClick,\n    children: value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 9\n  }, this);\n}\n_c = Square;\nfunction Board({\n  xIsNext,\n  squares,\n  onPlay\n}) {\n  function handleClick(i) {\n    if (squares[i] || calculateWinner(squares)) {\n      return;\n    }\n    const nextSquares = squares.slice();\n    if (xIsNext) {\n      nextSquares[i] = \"X\";\n    } else {\n      nextSquares[i] = \"O\";\n    }\n    onPlay(nextSquares);\n  }\n  const winner = calculateWinner(squares);\n  console.log(winner);\n  let status;\n  if (winner) {\n    status = \"Winner: \" + winner;\n  } else {\n    status = \"Next Player: \" + (xIsNext ? \"X\" : \"O\");\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"status\",\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), [0, 1, 2].map(row => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-row\",\n      children: [0, 1, 2].map(col => {\n        const idx = row * 3 + col;\n        return /*#__PURE__*/_jsxDEV(Square, {\n          value: squares[idx],\n          onSquareClick: () => handleClick(idx)\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 29\n        }, this);\n      })\n    }, row, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true);\n}\n_c2 = Board;\nfunction calculateWinner(squares) {\n  const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n}\nfunction ToggleButton() {\n  _s();\n  const [isOn, setIsOn] = useState(false);\n  const handleTioggle = () => {\n    setIsOn(prevState => !prevState);\n  };\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: handleToggle,\n    children: isOn ? \"ON\" : \"OFFF\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n}\n_s(ToggleButton, \"781ncfT5EimMrsq5ZStDBlx1pwQ=\");\n_c3 = ToggleButton;\nexport default function Game() {\n  _s2();\n  const [history, setHistory] = useState([Array(9).fill(null)]);\n  const [currentMove, setCurrentMove] = useState(0);\n  const xIsNext = currentMove % 2 === 0;\n  const currentSquares = history[currentMove];\n  function handlePlay(nextSquares) {\n    const nextHistory = [...history.slice(0, currentMove + 1), nextSquares];\n    setHistory(nextHistory);\n    setCurrentMove(nextHistory.length - 1);\n  }\n  function jumpTo(nextMove) {\n    setCurrentMove(nextMove);\n  }\n  const moves = history.map((squares, move) => {\n    let description;\n    console.log(history);\n    if (move === currentMove) {\n      description = \"You are at move #\" + move;\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }, this)\n      }, move, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this);\n    }\n    console.log(\"move: \" + move);\n    if (move > 0) {\n      description = \"Go to move #\" + move;\n    } else {\n      description = \"Go to game start\";\n    }\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => jumpTo(move),\n        children: description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }, this)\n    }, move, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-board\",\n      children: /*#__PURE__*/_jsxDEV(Board, {\n        xIsNext: xIsNext,\n        squares: currentSquares,\n        onPlay: handlePlay\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"toggle-button\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"sample\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-info\",\n      children: /*#__PURE__*/_jsxDEV(\"ol\", {\n        children: moves\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 9\n  }, this);\n}\n_s2(Game, \"xZZdy1/aP1agxyjHn6CL01lXnXc=\");\n_c4 = Game;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"Square\");\n$RefreshReg$(_c2, \"Board\");\n$RefreshReg$(_c3, \"ToggleButton\");\n$RefreshReg$(_c4, \"Game\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Square","value","onSquareClick","className","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","Board","xIsNext","squares","onPlay","handleClick","i","calculateWinner","nextSquares","slice","winner","console","log","status","map","row","col","idx","_c2","lines","length","a","b","c","ToggleButton","_s","isOn","setIsOn","handleTioggle","prevState","handleToggle","_c3","Game","_s2","history","setHistory","Array","fill","currentMove","setCurrentMove","currentSquares","handlePlay","nextHistory","jumpTo","nextMove","moves","move","description","_c4","$RefreshReg$"],"sources":["C:/Users/PC_User/study/react/tic_tac_toe/src/App.js"],"sourcesContent":["import { useState } from \"react\";\n\nfunction Square({ value, onSquareClick }) {\n    return (\n        <button className=\"square\" onClick={onSquareClick}>\n            {value}\n        </button>\n    );\n}\n\nfunction Board({ xIsNext, squares, onPlay }) {\n    function handleClick(i) {\n        if (squares[i] || calculateWinner(squares)) {\n            return;\n        }\n        const nextSquares = squares.slice();\n        if (xIsNext) {\n            nextSquares[i] = \"X\";\n        } else {\n            nextSquares[i] = \"O\";\n        }\n        onPlay(nextSquares);\n    }\n\n    const winner = calculateWinner(squares);\n    console.log(winner);\n    let status;\n    if (winner) {\n        status = \"Winner: \" + winner;\n    } else {\n        status = \"Next Player: \" + (xIsNext ? \"X\" : \"O\");\n    }\n\n      return (\n        <>\n            <div className=\"status\">{status}</div>\n            {[0, 1, 2].map((row) => (\n                <div className=\"board-row\" key={row}>\n                    {[0, 1, 2].map((col) => {\n                        const idx = row * 3 + col;\n                        return (\n                            <Square\n                                key={idx}\n                                value={squares[idx]}\n                                onSquareClick={() => handleClick(idx)}\n                            />\n                        );\n                    })}\n                </div>\n            ))}\n        </>\n    );\n}\n\nfunction calculateWinner(squares) {\n    const lines = [\n        [0, 1, 2],\n        [3, 4, 5],\n        [6, 7, 8],\n        [0, 3, 6],\n        [1, 4, 7],\n        [2, 5, 8],\n        [0, 4, 8],\n        [2, 4, 6],\n    ];\n    for (let i = 0; i < lines.length; i++) {\n        const [a, b, c] = lines[i];\n        if (\n            squares[a] &&\n            squares[a] === squares[b] &&\n            squares[a] === squares[c]\n        ) {\n            return squares[a];\n        }\n    }\n    return null;\n}\n\nfunction ToggleButton() { \n  const [isOn, setIsOn] = useState(false);\n\n  const handleTioggle = () => {\n    setIsOn((prevState) => !prevState);\n  };\n\n  return (\n    <button onClick={handleToggle}>\n      {isOn ? \"ON\" : \"OFFF\"}\n    </button>\n  );\n}\n\nexport default function Game() {\n    const [history, setHistory] = useState([Array(9).fill(null)]);\n    const [currentMove, setCurrentMove] = useState(0);\n    const xIsNext = currentMove % 2 === 0;\n    const currentSquares = history[currentMove];\n\n    function handlePlay(nextSquares) {\n        const nextHistory = [...history.slice(0, currentMove + 1), nextSquares];\n        setHistory(nextHistory);\n        setCurrentMove(nextHistory.length - 1);\n    }\n\n    function jumpTo(nextMove) {\n        setCurrentMove(nextMove);\n    }\n\n    const moves = history.map((squares, move) => {\n        let description;\n        console.log(history);\n        if (move === currentMove) {\n            description = \"You are at move #\" + move;\n            return (\n                <li key={move}>\n                    <span>{description}</span>\n                </li>\n            );\n        }\n        console.log(\"move: \" + move);\n        if (move > 0) {\n            description = \"Go to move #\" + move;\n        } else {\n            description = \"Go to game start\";\n        }\n\n        return (\n            <li key={move}>\n                <button onClick={() => jumpTo(move)}>{description}</button>\n            </li>\n        );\n    });\n\n    return (\n        <div className=\"game\">\n            <div className=\"game-board\">\n                <Board\n                    xIsNext={xIsNext}\n                    squares={currentSquares}\n                    onPlay={handlePlay}\n                />\n            </div>\n            <div className=\"toggle-button\">\n                <span>sample</span>\n            </div>\n            <div className=\"game-info\">\n                <ol>{moves}</ol>\n            </div>\n        </div>\n    );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}